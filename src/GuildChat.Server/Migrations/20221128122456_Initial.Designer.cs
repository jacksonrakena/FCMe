// <auto-generated />
using System;
using GuildChat.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GuildChat.Server.Migrations
{
    [DbContext(typeof(GuildChatContext))]
    [Migration("20221128122456_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GuildChat.Server.Database.GuildChatAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("api_key");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("GuildChat.Server.Database.GuildChatGameCharacter", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<string>("FreeCompanyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("free_company_id");

                    b.Property<string>("SecretText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secret_text");

                    b.Property<int>("VerificationMethod")
                        .HasColumnType("integer")
                        .HasColumnName("verification_method");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("characters");
                });

            modelBuilder.Entity("GuildChat.Server.Database.GuildChatGameCharacter", b =>
                {
                    b.HasOne("GuildChat.Server.Database.GuildChatAccount", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GuildChat.Server.Database.GuildChatAccount", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
